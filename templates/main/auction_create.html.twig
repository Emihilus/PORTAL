{% extends 'base.html.twig' %}

{% block title %}Nowa aukcja{% endblock %}



{% block body %}

<h1>Formularz dodawania aukcji</h1>

{# {{ form_start(form) }} #}
{# <div class="my-custom-class-for-errors">
        {{ form_errors(form) }}
</div> #}
{# <pre>
    {{ dump(form) }}
</pre> #}


{{ form_row(form.title) }}
{{ form_row(form.description) }}
{{ form_row(form.endsAt) }}

   <input id="upload-file" type="file" name="imageFile">

{{ form_row(form.Submit) }}

<div id="drop-area">
  <form class="my-form">
    <p>Upload multiple files with the file dialog or by dragging and dropping images onto the dashed region</p>
    <input type="file" id="fileElem" multiple accept="image/*" onchange="handleFiles(this.files)">
    <label class="button" for="fileElem">Select some files</label>
  </form>
</div>

{% endblock %}


{% block javascripts %}
{{ parent() }}
<script>
let uploadElement = document.getElementById('upload-file');
uploadElement.addEventListener("change",e =>
{
    let files = e.target.files || e.dataTransfer.files;
    if(!files.length)
        console.log('no files'); 
    /*let product = document.getElementById("product");
    let product_id = product.options[product.selectedIndex].value;
    if(product_id == "") return;*/
    console.log(files);
    console.log(files[0].name);

    let filees = $('#upload-file').prop('files')[0];
    
    let formData = new FormData();
    formData.append('file', filees);
    console.log(formData);
    
    $.ajax({
		url: "{{path ('uploadTemporary') }}",
		method: "post", 
		dataType: "json",
        cache: false,
        contentType: false,
        processData: false,
		data: formData
	})
	.done(res => 
	{ 
		console.log(res);
	});


    let dropArea = document.getElementById('drop-area');

  ;['dragenter', 'dragover', 'dragleave', 'drop'].forEach(eventName => {
  dropArea.addEventListener(eventName, preventDefaults, false)
})

function preventDefaults (e) {
  e.preventDefault()
  e.stopPropagation()
}

;['dragenter', 'dragover'].forEach(eventName => {
  dropArea.addEventListener(eventName, highlight, false)
})

;['dragleave', 'drop'].forEach(eventName => {
  dropArea.addEventListener(eventName, unhighlight, false)
})

function highlight(e) {
  dropArea.classList.add('highlight')
}

function unhighlight(e) {
  dropArea.classList.remove('highlight')
}


   
});
</script>
{% endblock %}